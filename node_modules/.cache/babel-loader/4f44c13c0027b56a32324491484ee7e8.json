{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Titi\\\\Documents\\\\GitHub\\\\ClaireDeLune88.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Titi\\\\Documents\\\\GitHub\\\\ClaireDeLune88.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\Titi\\\\Documents\\\\GitHub\\\\ClaireDeLune88.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  body {\\n    background: center / cover url('./img/calendar_backdrop.mistletoe.jpg');\\n    margin: 0;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from'react';import{createGlobalStyle}from'styled-components';import{StyledApp}from'./AppStyles';import{createCalendar}from'./helpers';import Hatch from'./Hatch';import Toast from'light-toast';var GlobalStyle=createGlobalStyle(_templateObject());function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),hatches=_useState2[0],setHatches=_useState2[1];// Check if localStorage contains our calendar \nuseEffect(function(){var calendar=localStorage.calendar?JSON.parse(localStorage.calendar):createCalendar();setHatches(calendar);},[]);// Store calendar in localStorage\nuseEffect(function(){hatches.length&&localStorage.setItem('calendar',JSON.stringify(hatches));},[hatches]);// Check if the date is past\nvar isPast=function isPast(nr){var today=new Date();today.setMonth(11);today.setDate(15);console.log(\"Jour: \"+today.getDate()+\" Mois: \"+today.getMonth()+\" nr: \"+nr);return today.getDate()>=nr&&today.getMonth()===11;};// Update Hatch open status\nvar handleFlipHatch=function handleFlipHatch(id,nr){/*\r\n    console.log(\"hatches type: \" + typeof hatches)\r\n    console.log(\"hatches keys: \" + hatches.keys())\r\n    console.log(\"hatches entries: \" + hatches.entries())\r\n\r\n    console.log(\"Hatches: \" + hatches.find(x => x.nr === 15))\r\n    console.log(\"Hatches: \" + hatches.find(x => x.nr === 15).nr)\r\n    console.log(\"id: \" + id)\r\n    console.log(\"nr: \" + nr)\r\n    */if(isPast(nr)){var updatedHatches=hatches.map(function(hatch){return hatch.id===id?_objectSpread(_objectSpread({},hatch),{},{open:!hatch.open}):hatch;});setHatches(updatedHatches);}else{Toast.fail('Tricheuse :0',3000,function(){// do something after the toast disappears\n});}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(GlobalStyle,null),/*#__PURE__*/React.createElement(StyledApp,null,hatches.map(function(hatch){return/*#__PURE__*/React.createElement(Hatch,{key:hatch.id,hatchData:hatch,handleClick:handleFlipHatch});})));}export default App;","map":{"version":3,"sources":["C:/Users/Titi/Documents/GitHub/ClaireDeLune88.github.io/src/App.js"],"names":["React","useState","useEffect","createGlobalStyle","StyledApp","createCalendar","Hatch","Toast","GlobalStyle","App","hatches","setHatches","calendar","localStorage","JSON","parse","length","setItem","stringify","isPast","nr","today","Date","setMonth","setDate","console","log","getDate","getMonth","handleFlipHatch","id","updatedHatches","map","hatch","open","fail"],"mappings":"6yBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,iBAAT,KAAkC,mBAAlC,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,GAAMC,CAAAA,WAAW,CAAGL,iBAAH,mBAAjB,CAOA,QAASM,CAAAA,GAAT,EAAe,eACiBR,QAAQ,CAAC,EAAD,CADzB,wCACNS,OADM,eACGC,UADH,eAGb;AACAT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,QAAQ,CAAGC,YAAY,CAACD,QAAb,CACbE,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACD,QAAxB,CADa,CAEbP,cAAc,EAFlB,CAIAM,UAAU,CAACC,QAAD,CAAV,CACD,CANQ,CAMN,EANM,CAAT,CAQA;AACAV,SAAS,CAAC,UAAM,CACdQ,OAAO,CAACM,MAAR,EAAkBH,YAAY,CAACI,OAAb,CAAqB,UAArB,CAAiCH,IAAI,CAACI,SAAL,CAAeR,OAAf,CAAjC,CAAlB,CACD,CAFQ,CAEN,CAACA,OAAD,CAFM,CAAT,CAIA;AACA,GAAMS,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,EAAD,CAAQ,CACrB,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,EAAd,CACAD,KAAK,CAACE,QAAN,CAAe,EAAf,EACAF,KAAK,CAACG,OAAN,CAAc,EAAd,EACAC,OAAO,CAACC,GAAR,CAAY,SAAWL,KAAK,CAACM,OAAN,EAAX,CACA,SADA,CACYN,KAAK,CAACO,QAAN,EADZ,CAEA,OAFA,CAEUR,EAFtB,EAIA,MAAOC,CAAAA,KAAK,CAACM,OAAN,IAAmBP,EAAnB,EACAC,KAAK,CAACO,QAAN,KAAqB,EAD5B,CAED,CAVD,CAYA;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,EAAD,CAAIV,EAAJ,CAAW,CACjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACI,GAAID,MAAM,CAACC,EAAD,CAAV,CAAe,CACf,GAAMW,CAAAA,cAAc,CAAGrB,OAAO,CAACsB,GAAR,CAAY,SAAAC,KAAK,QACtCA,CAAAA,KAAK,CAACH,EAAN,GAAaA,EAAb,gCAAuBG,KAAvB,MAA8BC,IAAI,CAAE,CAACD,KAAK,CAACC,IAA3C,GAAoDD,KADd,EAAjB,CAAvB,CAGEtB,UAAU,CAACoB,cAAD,CAAV,CACD,CALD,IAMK,CAEDxB,KAAK,CAAC4B,IAAN,CAAW,cAAX,CAA2B,IAA3B,CAAiC,UAAM,CACvC;AACD,CAFC,EAGH,CACF,CAvBD,CA0BA,mBACE,qDACE,oBAAC,WAAD,MADF,cAEE,oBAAC,SAAD,MACGzB,OAAO,CAACsB,GAAR,CAAY,SAAAC,KAAK,qBAChB,oBAAC,KAAD,EACE,GAAG,CAAEA,KAAK,CAACH,EADb,CAEE,SAAS,CAAEG,KAFb,CAIE,WAAW,CAAEJ,eAJf,EADgB,EAAjB,CADH,CAFF,CADF,CAeD,CAED,cAAepB,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport { StyledApp } from './AppStyles'\r\nimport { createCalendar } from './helpers'\r\nimport Hatch from './Hatch'\r\nimport Toast from 'light-toast';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: center / cover url('./img/calendar_backdrop.mistletoe.jpg');\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nfunction App() {\r\n  const [hatches, setHatches] = useState([])\r\n\r\n  // Check if localStorage contains our calendar \r\n  useEffect(() => {\r\n    const calendar = localStorage.calendar\r\n      ? JSON.parse(localStorage.calendar)\r\n      : createCalendar()\r\n\r\n    setHatches(calendar)\r\n  }, [])\r\n\r\n  // Store calendar in localStorage\r\n  useEffect(() => {\r\n    hatches.length && localStorage.setItem('calendar', JSON.stringify(hatches))\r\n  }, [hatches])\r\n\r\n  // Check if the date is past\r\n  const isPast = (nr) => {\r\n    const today = new Date()\r\n    today.setMonth(11)\r\n    today.setDate(15)\r\n    console.log(\"Jour: \" + today.getDate() + \r\n                \" Mois: \" + today.getMonth() +\r\n                \" nr: \" + nr)\r\n\r\n    return today.getDate() >= nr && \r\n           today.getMonth() === 11\r\n  }\r\n  \r\n  // Update Hatch open status\r\n  const handleFlipHatch = (id,nr) => {\r\n    /*\r\n    console.log(\"hatches type: \" + typeof hatches)\r\n    console.log(\"hatches keys: \" + hatches.keys())\r\n    console.log(\"hatches entries: \" + hatches.entries())\r\n\r\n    console.log(\"Hatches: \" + hatches.find(x => x.nr === 15))\r\n    console.log(\"Hatches: \" + hatches.find(x => x.nr === 15).nr)\r\n    console.log(\"id: \" + id)\r\n    console.log(\"nr: \" + nr)\r\n    */\r\n    if (isPast(nr)){\r\n    const updatedHatches = hatches.map(hatch =>\r\n      hatch.id === id ? { ...hatch, open: !hatch.open } : hatch\r\n    )\r\n      setHatches(updatedHatches)  \r\n    }\r\n    else {\r\n      \r\n        Toast.fail('Tricheuse :0', 3000, () => {\r\n        // do something after the toast disappears\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <StyledApp>\r\n        {hatches.map(hatch => (\r\n          <Hatch\r\n            key={hatch.id}\r\n            hatchData={hatch}\r\n            \r\n            handleClick={handleFlipHatch}\r\n          />\r\n        ))}\r\n      </StyledApp>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}